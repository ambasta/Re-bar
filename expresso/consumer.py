'''
AWS Lambda Handler
'''
import json

from base64 import b64decode
from pyexpresso import ScanReader


def lambda_handler(event, context):
    '''
    Invokation handler for records fetched via kinesis on lambda
    '''
    responses = []

    for record in event['Records']:
        data = json.loads(b64decode(record['kinesis']['data']))
        scanner = ScanReader(data)
        responses.append(scanner.get())
    return responses

def test_handler():
    '''
    Manual invokation for testing
    '''

    data = json.loads(b64decode('eyJpdmQiOiAiMjAxNi0wMS0yM1QxNToxMzo1MS44NzEwMDAiLCAiaXRtIjogW10sICJuc2wiOiBbeyJkdCI6IFsyMDE2LCAxLCAyM10sICJjb2RlIjogIlgtUFBPTk0ifSwgeyJkdCI6IFsyMDE2LCAxLCAyM10sICJjb2RlIjogIlgtVUNJIn0sIHsiZHQiOiBbMjAxNiwgMSwgMjNdLCAiY29kZSI6ICJYLVBJT00ifSwgeyJkdCI6IFsyMDE2LCAxLCAyM10sICJjb2RlIjogIkdPUi1EV1MifSwgeyJkdCI6IFsyMDE2LCAxLCAyM10sICJjb2RlIjogIlgtREJPMUYifSwgeyJkdCI6IFsyMDE2LCAxLCAyM10sICJjb2RlIjogIkNTLTEwMSJ9LCB7ImR0IjogWzIwMTYsIDEsIDIzXSwgImNvZGUiOiAiWC1ETE8yRiJ9LCB7ImR0IjogWzIwMTYsIDEsIDI1XSwgImNvZGUiOiAiWC1JTEwyRiJ9LCB7ImR0IjogWzIwMTYsIDEsIDI1XSwgImNvZGUiOiAiWC1JTEwxRiJ9LCB7ImR0IjogWzIwMTYsIDEsIDI1XSwgImNvZGUiOiAiWC1ETEwxRiJ9LCB7ImR0IjogWzIwMTYsIDEsIDI1XSwgImNvZGUiOiAiWC1JTEwxRiJ9LCB7ImR0IjogWzIwMTYsIDEsIDI1XSwgImNvZGUiOiAiWC1JTEwxRiJ9LCB7ImR0IjogWzIwMTYsIDEsIDI1XSwgImNvZGUiOiAiWC1ETEwyRiJ9LCB7ImR0IjogWzIwMTYsIDEsIDI1XSwgImNvZGUiOiAiWC1JTEQyRiJ9LCB7ImR0IjogWzIwMTYsIDEsIDI1XSwgImNvZGUiOiAiWC1JQkQzRiJ9LCB7ImR0IjogWzIwMTYsIDEsIDI3XSwgImNvZGUiOiAiWC1EREQzRkQifV0sICJjbiI6ICJNdW1iYWlfVGhhbmV3ZXN0X0RjIChNYWhhcmFzaHRyYSkiLCAibGRkIjogIjIwMTYtMDEtMjdUMTE6MzQ6MTciLCAidm9sbCI6IDAuMCwgIml0YyI6IG51bGwsICJjZCI6ICIyMDE2LTAxLTIzVDE0OjI4OjQyLjI5NDAwMCIsICJjdGluIjogIiIsICJmYmQiOiAiMjAxNi0wMS0yM1QxNjo0OToyMy44NzEwMDAiLCAiY3MiOiB7Im5zbCI6ICJYLURERDNGRCIsICJzcyI6ICJEaXNwYXRjaGVkIiwgInNyIjogIkRpc3BhdGNoZWQgZm9yIERlbGl2ZXJ5IiwgImFjdCI6ICIrRCIsICJzdCI6ICJVRCIsICJ2aCI6ICJNSDA0RlMxNTkwIChNYW5nZXNoX1BhZHdhbF9GRSkiLCAiZHdibiI6ICJEU1AxNzYzMTAyNTM4NTQxMzAyMjE4MSIsICJ1IjogInZpc2hhbC5tdXJhbmphbiIsICJzbCI6ICJNdW1iYWlfVGhhbmV3ZXN0X0RjIChNYWhhcmFzaHRyYSkiLCAidWQiOiAiMjAxNi0wMS0yN1QxMTozNDoxNy4xMTkwMDAiLCAic2QiOiAiMjAxNi0wMS0yN1QxMTozNDoxNy4xMTkwMDAifSwgImRpZmYiOiB7ImRwZiI6IDAsICJkZnBkIjogMywgImRpcGQiOiAwLjM5NzAwNzk1NTgzMzMzMzMsICJkZWYiOiAwLCAiZGZiaSI6IDEuNTkyMjIyMjIyMjIyMjIyMn0sICJnbSI6IDE5MDAwMC4wLCAicHRheCI6ICIiLCAiaW52X3VybCI6ICIiLCAiYWR0IjogbnVsbCwgInN0X2FjayI6ICIiLCAicHQiOiAiQ09EIiwgIm9jYyI6ICJEZWxoaSBOQ1IiLCAiZXh0cmEiOiB7fSwgImFkZCI6IFsiT3dhbGEgbmVhciB2YWlzaG5hdmkgYmhhdmFuIHBvc3Qga2FzYXIgdmFkYXZhbGkgZyBiIHJvYWQgdGhhbmVKaXRlc2gga2FtYWxha2FyIGJob2lyTWFoYXJhc2h0cmFUaGFuZTQwMDYxNUlORCJdLCAicmNuIjogIkRlbF9CX1JQQyAoRGVsaGkpIiwgImxwIjogbnVsbCwgImxvY2siOiBudWxsLCAicGgiOiBbIjk2MTk0Mjk3NzciXSwgInJjdHkiOiAiIiwgInJnbiI6ICJXIiwgImZ0ZCI6ICIyMDE2LTAxLTI1VDA5OjAwOjAwIiwgImlwIjogZmFsc2UsICJwZCI6ICIyMDE2LTAxLTIzVDE0OjUwOjAyLjY0MzAwMCIsICJybm0iOiAiUGFscmVkIiwgInhyYXljcyI6IHRydWUsICJwaWQiOiBudWxsLCAiZGQiOiB7ImZkZCI6ICIyMDE2LTAxLTI3VDExOjM0OjE3IiwgInZpZCI6IG51bGwsICJydG8iOiBudWxsLCAicmRjdCI6IG51bGwsICJ0IjogIkRpc3BhdGNoIiwgInNydCI6IG51bGwsICJkY3QiOiAxLCAiaXN0IjogbnVsbCwgImlkIjogIjU2YTYzMmQxODM5ZDgyMzNiODNhMGM2NSJ9LCAiY3BpbiI6IDQwMDYxNSwgIm1vdCI6ICJFIiwgInZvbGgiOiAwLjAsICJyZHBjIjogbnVsbCwgInJzdCI6ICIiLCAibWQiOiAiRSIsICJ1cGwiOiAiVVBMODI2MDc1NzM2NjY5NzQ5NzA2MSIsICJmaWQiOiAiMjAxNi0wMS0yM1QyMDoxOTo1Ny40MzAwMDAiLCAiY2F0IjogW10sICJkcGMiOiAiTXVtYmFpX01hbmtvbGlfSVAgKE1haGFyYXNodHJhKSIsICJmZHBjZCI6ICIyMDE2LTAxLTI1VDEwOjUyOjUyLjc3NDAwMCIsICJ3Ym4iOiAiMTg5NzE0NTI5NDA1IiwgInVkIjogIjIwMTYtMDEtMjdUMTE6MzQ6MTcuMTE5MDAwIiwgInJwaW4iOiAxMTAwNzcsICJwbCI6ICJQYWxyZWQtREVMIiwgImVtIjogIiIsICJwcmQiOiAiQmx1ZXRvb3RoIFdlYXJhYmxlIFNtYXJ0IFdhdGNoIGZvciBTbWFydHBob25lcyBJT1MgQW5kcm9pZCAoQmxhY2spIiwgInpuIjogIkMiLCAicGluIjogNDAwNjE1LCAicHNlZyI6IHsidWQiOiAiMjAxNi0wMS0yM1QxNDo1NTozNS41MjgwMDAiLCAiY2F0IjogIldhdGNoZXMsIEV5ZXdlYXIgYW5kIEpld2VsbGVyeSIsICJzY2F0IjogIldhdGNoZXMsIEV5ZXdlYXIgYW5kIEpld2VsbGVyeS0+V2F0Y2hlcyIsICJkZyI6IGZhbHNlfSwgImVkIjogIjIwMTYtMDEtMjdUMjM6NTk6NTkiLCAiaW52IjogeyJyZHQiOiBudWxsLCAicnMiOiBudWxsLCAicmFtdCI6IG51bGwsICJjaHJncyI6IHt9LCAicnRpZCI6IG51bGwsICJudW0iOiBudWxsLCAidGlkIjogbnVsbCwgImR0IjogbnVsbCwgInJudW0iOiBudWxsfSwgInByaSI6IDEsICJhbCI6IFtdLCAic3VyZmFjZSI6IGZhbHNlLCAicXR5IjogIiIsICJhciI6IGZhbHNlLCAicHJzIjogIiIsICJycGgiOiBbXSwgInNhZGQiOiAiIiwgInZvbGIiOiAwLjAsICJmcGQiOiAiMjAxNi0wMS0yNVQxNzo0MTowNi40MjkwMDAiLCAiY250IjogIkluZGlhIiwgInJhZGQiOiBbIlBhbHJlZCBPbmxpbmUgVGVjaG5vbG9naWVzIFB2dCBMdGRQbG90IDMzJjM0LFZpbGxhZ2UtQmFtbm9saSxTZWMtMjggRHdhcmthLE5ldyBEZWxoaSwiXSwgIm5tIjogIkppdGVzaCBrYW1hbGFrYXIgYmhvaXIiLCAicnMiOiAxNTk5LjAsICJjYXRfbm90aWZ5IjogbnVsbCwgInhyYXkiOiBmYWxzZSwgInRpbiI6ICIiLCAicGNsaCI6IG51bGwsICJjbmMiOiAiVGhhbmUiLCAic2lkIjogIiIsICJjc3QiOiAiIiwgImNsIjogIlBhbHJlZCIsICJza3UiOiAiIiwgIl90eXBlIjogIlBhY2thZ2UiLCAic25tIjogIiIsICJjZ20iOiAxOTAwMDAuMCwgImR3cyI6IHsiaCI6IDcuMiwgImIiOiAxNy4wLCAic3d0IjogMTgwLjAsICJsIjogMTguOX0sICJlY24iOiAibXVtYmFpX3RoYW5ld2VzdF9kYy1tYWhhcmFzaHRyYSIsICJvaWQiOiAiU08xMzUxOTU3IiwgImRhdGUiOiB7Iml2ZCI6IG51bGwsICJsc2QiOiBudWxsLCAibGRkIjogbnVsbCwgImVkIjogbnVsbCwgImNkIjogIjIwMTYtMDEtMjNUMTQ6Mjg6NDIuMjkwMDAwIiwgImZiZCI6IG51bGwsICJtbmQiOiAiMjAxNi0wMS0yM1QxNDo1MDowMi42NDMwMDAiLCAibnRkIjogbnVsbCwgImZwZCI6IG51bGwsICJhZHQiOiBudWxsLCAiZmRkIjogbnVsbCwgImlkdCI6IG51bGwsICJvZCI6IG51bGwsICJjcGQiOiAiMjAxNi0wMS0yM1QxNDoyODozOC40NjUwMDAiLCAibHUiOiAiMjAxNi0wMS0yM1QxNDo1MDozNS4zNjMwMDAiLCAiZnRkIjogIjIwMTYtMDEtMjVUMDk6MDA6MDAiLCAicGQiOiAiMjAxNi0wMS0yM1QxNDo1MDowMi42NDMwMDAiLCAicGRkIjogbnVsbCwgInJkdCI6IG51bGx9LCAiYXNlZyI6IHsiYWxvYyI6ICIiLCAiaW52YWxpZF9hZGQiOiBmYWxzZSwgInBpbiI6ICI0MDA2MTUiLCAibG9jIjogIm93YWxlIiwgImxvbiI6IDcyLjk1NTk3NSwgIm1pc21hdGNoIjogZmFsc2UsICJ1ZCI6ICIyMDE2LTAxLTIzVDE0OjUwOjM1LjUzMTAwMCIsICJzbG9jIjogIiIsICJsYXQiOiAxOS4yNzAxMDgsICJwaW5fY3R5X21pc21hdGNoIjogZmFsc2UsICJjaXR5X3N1cHBvcnRlZCI6IHRydWV9LCAiX2lkIjogIjU2YTM0MGMyODM5ZDgyMjdjOWVjNjJmNCIsICJuZGMiOiAib3dhbGUsIE11bWJhaV9UaGFuZXdlc3RfRGMgKE1haGFyYXNodHJhKSwgNDAwNjE1IiwgIm9kIjogIjIwMTYtMDEtMjNUMTQ6NTA6MDIuNjMwMDAwIiwgIm9jIjogIkRlbGhpX0dhdGV3YXkgKERlbGhpKSIsICJjdHkiOiAiVGhhbmUiLCAic3QiOiAiTWFoYXJhc2h0cmEiLCAiZXRjIjogbnVsbCwgInNpIjogIiIsICJjdGciOiAiIiwgInUiOiAicGFua2FqLm5lZ2kiLCAiY29kIjogMTU5OS4wLCAic2MiOiAiQk9NL01BSSIsICJwZGQiOiAiMjAxNi0wMS0yN1QyMzo1OTo1OSIsICJwdXBpZCI6ICIzMzM4ODA4In0='))
    scanner = ScanReader(data)
    print('Response: {}'.format(scanner.get()))
